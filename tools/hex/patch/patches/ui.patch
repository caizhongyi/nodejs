Index: base/l10n/l10n_util.cc
===================================================================
--- base/l10n/l10n_util.cc	(revision 220934)
+++ base/l10n/l10n_util.cc	(working copy)
@@ -659,9 +659,25 @@
   return UTF16ToUTF8(GetStringUTF16(message_id));
 }
 
+// For heXium
+#if !defined(HEXCLIENT)
+#include "chrome/grit/chromium_strings.h"
+#include "chrome/grit/generated_resources.h"
+#endif  // !HEXCLIENT
+
 string16 GetStringUTF16(int message_id) {
   ResourceBundle& rb = ResourceBundle::GetSharedInstance();
   string16 str = rb.GetLocalizedString(message_id);
+  // For heXium
+#if !defined(HEXCLIENT)
+  if (message_id != IDS_ABOUT_VERSION_COPYRIGHT &&
+      message_id != IDS_ABOUT_PRODUCT_DESCRIPTION) {
+    std::string chromium_str("Chromium");
+    std::string hexium_str("HeXium");
+    ReplaceSubstringsAfterOffset(&str, 0,
+        UTF8ToUTF16(chromium_str), UTF8ToUTF16(hexium_str));
+  }
+#endif  // !HEXCLIENT
   AdjustParagraphDirectionality(&str);
 
   return str;
Index: ui.gyp
===================================================================
--- ui.gyp	(revision 220934)
+++ ui.gyp	(working copy)
@@ -5,6 +5,8 @@
 {
   'variables': {
     'chromium_code': 1,
+    # For heX
+    'hexclient%': '<!(echo %HEXCLIENT%)',
   },
   'includes': [
     'shell_dialogs.gypi',
@@ -33,6 +35,10 @@
       'defines': [
         'UI_IMPLEMENTATION',
       ],
+      # For heXium
+      'include_dirs': [
+        '<(SHARED_INTERMEDIATE_DIR)',
+      ],
       # Export these dependencies since text_elider.h includes ICU headers.
       'export_dependent_settings': [
         '../net/net.gyp:net',
@@ -612,6 +618,12 @@
         }],
       ],
       'conditions': [
+        # For heX
+        ['hexclient==1', {
+          'defines': [
+            'HEXCLIENT',
+          ],
+        }],
         ['OS!="ios"', {
           'includes': [
             'base/ime/ime.gypi',
